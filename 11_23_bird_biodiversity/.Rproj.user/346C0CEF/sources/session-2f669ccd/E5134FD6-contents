
install.packages("osmdata")
install.packages("sf")
install.packages("ggplot2")

install.packages("viridis")
install.packages("plotly")
install.packages("ggnewscale")


library(osmdata)
library(sf)
library(ggplot2)

library(viridis)
library(plotly)
library(ggnewscale)

options(sf_config = list(
  SHAPE_RESTORE_SHX = "YES"
))

# Load HOLC data (replace "holc_data.shp" with your file)
holc_sf <- st_read("~/Documents/GitHub/research_redlining_biodiversity/data/fullshpfile/shapefile/holc_ad_data.shp")

#check the CRS for the two dataframes
st_crs(holc_sf)
st_crs(cleaned_df)

#transform them so that they are compatible
cleaned_df <- st_transform(cleaned_df, crs = st_crs(holc_sf))

# Check validity
st_is_valid(holc_sf)
st_is_valid(cleaned_df)

# If invalid geometries are detected, attempt to fix them
holc_sf <- st_make_valid(holc_sf)
bird_red_census <- st_make_valid(cleaned_df)

# Merge the point data with the Census tract data & bird
bird_red_census <- st_join(holc_sf, cleaned_df)







#Just to check....
colnames(bird_red_census)

poverty_plot <- ggplot() +
  geom_sf(data = merged_data1, aes(fill = percent_in_poverty, alpha = 0.1), color = "white", size = 0.2) +
  scale_fill_viridis_c() +
  labs(fill = "Percent in Poverty")+   # Replace with an appropriate title

    
  new_scale_fill() +
  geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
  scale_fill_manual(
    values = c("A" = "blue", "B" = "green", "C" = "yellow", "D" = "red"),
    guide = guide_legend(),
    aesthetics = c(alpha = 0.6)
  ) + # Set colors for HOLC grades
  geom_sf(data = point_sf, color = "black", size = 0.5) +
  labs(fill = "Holc Grade")  # Replace with an appropriate title

# Print the plot
print(poverty_plot)

























#Cleaning the Data
# Remove NAs
merged_data1 <- merged_data[!is.na(merged_data$percent_in_poverty), ]

#If you have character (chr) columns that you want to convert to numeric (num) in a data frame, you can use the mutate function from the dplyr package. Here's an example:

# you want to convert the column to to numeric


#cleaned_df <- cleaned_df %>%
#  mutate(ResultMeasureValue = as.numeric(ResultMeasureValue))





#summary(cleaned_df$ResultMeasureValue)

# basic scatterplot
ggplot(bird_red_census, aes(x = holc_grade, y = Species_Richness)) + 
  geom_boxplot() +
  # Fit a linear regression line
  labs(
    title = "Species Richness by Percent Poverty in Census Tract ",
    x = "Percent in Poverty",
    y = "Species Richness"
  ) 

# If you want to extract statistics, you can use the lm() function
model2 <- aov(Species_Richness ~ holc_grade, data = bird_red_census)

# Print the summary of the linear regression model
summary(model2)

tukey_results <- TukeyHSD(model2)

tukey_results

