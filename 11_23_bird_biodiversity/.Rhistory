variable = recode(variable,
# you may notice that tidycensus drops the 'E' from the
# end of the variable code names
B05010_002 = 'in_poverty',
B05010_001 = 'total_pop_for_poverty_estimates',
B01002_001 = 'median_age',
B19013_001 =  'median_household_income',
B01003_001 = 'total_population',
B01001_002 = 'urban_area_population',
B25001_001 = 'housing_units',
B25002_001 =  'vacancy_status',
B19013_001 = 'median_household_income'))
View(poverty)
View(variables)
poverty <- get_acs(
state = 'GA', # Georgia state FIPS code is '13'
county = 'DeKalb', # Specify the county name
geography = 'tract',
year = 2019, # 2015-2019 5-year ACS
geometry = TRUE,
keep_geo_vars = TRUE,
variables = c(
in_poverty = 'B05010_002E',
total_pop_for_poverty_estimates = 'B05010_001E',
median_age = 'B01002_001E',
median_household_income = 'B19013_001E',
urban_area_population = 'B01001_002E',
housing_units = "B25001_001E",
vacancy_status = "B25002_001E",
median_household_income ="B19013_001E",
total_population = "B01003_001E",          # Total population
white_alone = "B02001_002E",               # White alone
black_alone = "B02001_003E",
native_alone = 'B02001_004E'))
poverty <- poverty %>%
mutate(
variable = recode(variable,
# you may notice that tidycensus drops the 'E' from the
# end of the variable code names
B05010_002 = 'in_poverty',
B05010_001 = 'total_pop_for_poverty_estimates',
B01002_001 = 'median_age',
B19013_001 =  'median_household_income',
B01003_001 = 'total_population',
B01001_002 = 'urban_area_population',
B25001_001 = 'housing_units',
B25002_001 =  'vacancy_status',
B19013_001 = 'median_household_income',
B02001_002 = 'white_alone',               # White alone
B02001_003 = 'black_alone' ,
B02001_004 = 'native_only'))
View(poverty)
poverty <- poverty %>%
mutate(
variable = recode(variable,
# you may notice that tidycensus drops the 'E' from the
# end of the variable code names
B05010_002 = 'in_poverty',
B05010_001 = 'total_pop_for_poverty_estimates',
B01002_001 = 'median_age',
B19013_001 =  'median_household_income',
B01003_001 = 'total_population',
B01001_002 = 'urban_area_population',
B25001_001 = 'housing_units',
B25002_001 =  'vacancy_status',
B19013_001 = 'median_household_income',
B02001_002 = 'white_alone',               # White alone
B02001_003 = 'black_alone' ,
B02001_004 = 'native_alone'))
poverty_geometry <- poverty %>% select(GEOID) %>% unique() # save the geometry data
poverty <- poverty %>%
sf::st_drop_geometry() %>% # remove geometry data
tidyr::pivot_wider(
id_cols = GEOID,
names_from = variable,
values_from = c(estimate, moe))
View(poverty)
poverty <- get_acs(
state = 'GA', # Georgia state FIPS code is '13'
county = 'DeKalb', # Specify the county name
geography = 'tract',
year = 2019, # 2015-2019 5-year ACS
geometry = TRUE,
keep_geo_vars = TRUE,
variables = c(
in_poverty = 'B05010_002E',
total_pop_for_poverty_estimates = 'B05010_001E',
median_age = 'B01002_001E',
median_household_income = 'B19013_001E',
urban_area_population = 'B01001_002E',
housing_units = "B25001_001E",
vacancy_status = "B25002_001E",
median_household_income ="B19013_001E",
total_population = "B01003_001E",          # Total population
white_alone = "B02001_002E",               # White alone
black_alone = "B02001_003E",
native_alone = 'B02001_004E'))
View(poverty)
poverty <- get_acs(
state = 'GA', # Georgia state FIPS code is '13'
county = 'DeKalb', # Specify the county name
geography = 'tract',
year = 2019, # 2015-2019 5-year ACS
geometry = TRUE,
keep_geo_vars = TRUE,
variables = c(
in_poverty = 'B05010_002E',
total_pop_for_poverty_estimates = 'B05010_001E',
median_age = 'B01002_001E',
median_household_income = 'B19013_001E',
urban_area_population = 'B01001_002E',
housing_units = "B25001_001E",
vacancy_status = "B25002_001E",
median_household_income ="B19013_001E",
total_population = "B01003_001E",          # Total population
white_alone = "B02001_002E",               # White alone
black_alone = "B02001_003E",
native_alone = 'B02001_004E'))
poverty <- poverty %>%
mutate(
variable = recode(variable,
# you may notice that tidycensus drops the 'E' from the
# end of the variable code names
B05010_002 = 'in_poverty',
B05010_001 = 'total_pop_for_poverty_estimates',
B01002_001 = 'median_age',
B19013_001 =  'median_household_income',
B01003_001 = 'total_population',
B01001_002 = 'urban_area_population',
B25001_001 = 'housing_units',
B25002_001 =  'vacancy_status',
B19013_001 = 'median_household_income',
B02001_002 = 'white_alone',               # White alone
B02001_003 = 'black_alone' ,
B02001_004 = 'native_alone'))
poverty_geometry <- poverty %>% select(GEOID) %>% unique() # save the geometry data
poverty <- poverty %>%
sf::st_drop_geometry() %>% # remove geometry data
tidyr::pivot_wider(
id_cols = GEOID,
names_from = variable,
values_from = c(estimate, moe,ALAND, AWATER))
View(poverty)
poverty <- poverty %>%
mutate(
variable = recode(variable,
# you may notice that tidycensus drops the 'E' from the
# end of the variable code names
B05010_002 = 'in_poverty',
B05010_001 = 'total_pop_for_poverty_estimates',
B01002_001 = 'median_age',
B19013_001 =  'median_household_income',
B01003_001 = 'total_population',
B01001_002 = 'urban_area_population',
B25001_001 = 'housing_units',
B25002_001 =  'vacancy_status',
B19013_001 = 'median_household_income',
B02001_002 = 'white_alone',               # White alone
B02001_003 = 'black_alone' ,
B02001_004 = 'native_alone'))
poverty <- get_acs(
state = 'GA', # Georgia state FIPS code is '13'
county = 'DeKalb', # Specify the county name
geography = 'tract',
year = 2019, # 2015-2019 5-year ACS
geometry = TRUE,
keep_geo_vars = TRUE,
variables = c(
in_poverty = 'B05010_002E',
total_pop_for_poverty_estimates = 'B05010_001E',
median_age = 'B01002_001E',
median_household_income = 'B19013_001E',
urban_area_population = 'B01001_002E',
housing_units = "B25001_001E",
vacancy_status = "B25002_001E",
median_household_income ="B19013_001E",
total_population = "B01003_001E",          # Total population
white_alone = "B02001_002E",               # White alone
black_alone = "B02001_003E",
native_alone = 'B02001_004E'))
poverty <- poverty %>%
mutate(
variable = recode(variable,
# you may notice that tidycensus drops the 'E' from the
# end of the variable code names
B05010_002 = 'in_poverty',
B05010_001 = 'total_pop_for_poverty_estimates',
B01002_001 = 'median_age',
B19013_001 =  'median_household_income',
B01003_001 = 'total_population',
B01001_002 = 'urban_area_population',
B25001_001 = 'housing_units',
B25002_001 =  'vacancy_status',
B19013_001 = 'median_household_income',
B02001_002 = 'white_alone',               # White alone
B02001_003 = 'black_alone' ,
B02001_004 = 'native_alone'))
poverty_geometry <- poverty %>% select(GEOID) %>% unique() # save the geometry data
poverty <- poverty %>%
sf::st_drop_geometry() %>% # remove geometry data
tidyr::pivot_wider(
id_cols = c(GEOID,ALAND, AWATER),
names_from = variable,
values_from = c(estimate, moe))
View(poverty)
holc_sf <- st_read("holc_ad_data.shp")
holc_sf <- st_read("~/Documents/GitHub/research_redlining_biodiversity/data/holc_ad_data.shp")
library(sf)
holc_sf <- st_read("~/Documents/GitHub/research_redlining_biodiversity/data/holc_ad_data.shp")
options(sf_config = list(
SHAPE_RESTORE_SHX = YES
))
library(sf)
options(sf_config = list(
SHAPE_RESTORE_SHX = "YES"
))
holc_sf <- st_read("~/Documents/GitHub/research_redlining_biodiversity/data/holc_ad_data.shp")
holc_sf <- st_read("~/Documents/GitHub/research_redlining_biodiversity/data/fullshpfile/holc_ad_data.shp")
holc_sf <- st_read("~/Documents/GitHub/research_redlining_biodiversity/data/fullshpfile/shapefile/holc_ad_data.shp")
st_crs(holc_sf)
st_crs(cleaned_df)
bird_red_census <- st_transform(cleaned_df, crs = st_crs(holc_sf))
View(bird_red_census)
View(holc_sf)
bird_red_census <- st_join(holc_sf, bird_red_census)
cleaned_df <- st_transform(cleaned_df, crs = st_crs(holc_sf))
bird_red_census <- st_join(holc_sf, bird_red_census)
st_crs(holc_sf)
st_crs(cleaned_df)
cleaned_df <- st_transform(cleaned_df, crs = st_crs(holc_sf))
bird_red_census <- st_join(holc_sf, bird_red_census)
# Check validity
st_is_valid(holc_sf)
st_is_valid(bird_red_census)
# If invalid geometries are detected, attempt to fix them
holc_sf <- st_make_valid(holc_sf)
bird_red_census <- st_make_valid(bird_red_census)
st_is_valid(holc_sf)
bird_red_census <- st_join(holc_sf, bird_red_census)
View(bird_red_census)
ggplot() +
geom_sf(data = merged_data, aes(fill = percent_in_poverty), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
scale_fill_viridis_c() + # You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = merged_data, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
scale_fill_viridis_c() + # You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
scale_fill_viridis_c() + # You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
View(bird_red_census)
View(cleaned_df)
ggplot(bird_red_census, aes(x = holc_grade, y = Species_Richness)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +  # Fit a linear regression line
labs(
title = "Species Richness by Percent Poverty in Census Tract ",
x = "Percent in Poverty",
y = "Species Richness"
)
ggplot(bird_red_census, aes(x = holc_grade, y = Species_Richness)) +
geom_boxplot() +
# Fit a linear regression line
labs(
title = "Species Richness by Percent Poverty in Census Tract ",
x = "Percent in Poverty",
y = "Species Richness"
)
model2 <- aov(Species_Richness ~ holc_grade, data = bird_red_census)
summary(model2)
tukey_results <- TukeyHSD(model2)
tukey_results
bird_red_census <- bird_red_census[!is.na(merged_red_census$GEOID) , ]
bird_red_census <- bird_red_census[!is.na(bird_red_census$GEOID) , ]
ggplot(bird_red_census, aes(x = holc_grade, y = Species_Richness)) +
geom_boxplot() +
# Fit a linear regression line
labs(
title = "Species Richness by Percent Poverty in Census Tract ",
x = "Percent in Poverty",
y = "Species Richness"
)
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
install.packages("osmdata")
library(osmdata)
bounding_box <- c(left = -84.3, bottom = 33.6, right = -84.1, top = 33.8)
osm_data <- osmdata::opq(bbox = bounding_box) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
streets <- osm_data$osm_multipolygons %>%
dplyr::filter(osm_data$osm_multipolygons$highway %in% c('primary', 'secondary', 'tertiary', 'residential'))
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.3, -84.1), ylim = c(33.6, 33.8), expand = FALSE)+
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
# Specify the bounding box for the area you're interested in (adjust coordinates accordingly)
bounding_box <- c(left = -84.3026, bottom = 33.6212, right = -84.125, top = 33.8937)
osm_data <- osmdata::opq(bbox = bounding_box) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
streets <- osm_data$osm_multipolygons %>%
dplyr::filter(osm_data$osm_multipolygons$highway %in% c('primary', 'secondary', 'tertiary', 'residential'))
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.3, -84.1), ylim = c(33.6, 33.8), expand = FALSE)
streets <- osm_data$osm_multipolygons %>%
dplyr::filter(osm_data$osm_multipolygons$highway %in% c('primary', 'secondary', 'tertiary', 'residential'))
streets <- osm_data$osm_lines %>%
dplyr::filter(osm_data$osm_lines$highway %in% c('primary', 'secondary', 'tertiary', 'residential', 'unclassified'))
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.3, -84.1), ylim = c(33.6, 33.8), expand = FALSE)
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.3, -84.1), ylim = c(33.6, 33.8), expand = FALSE)+
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
bounding_box <- c(left = --85, bottom = 33, right = -83.9, top = 33.5)
bounding_box <- c(left = -85, bottom = 33, right = -83.9, top = 33.5)
osm_data <- osmdata::opq(bbox = bounding_box) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
streets <- osm_data$osm_lines %>%
dplyr::filter(osm_data$osm_lines$highway %in% c('primary', 'secondary', 'tertiary', 'residential', 'unclassified'))
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-85, -83.9), ylim = c(33, 33.5), expand = FALSE)
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-85, -83.9), ylim = c(33, 33.5), expand = FALSE)+
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
# geom_sf(data = streets, color = "gray", size = 0.5) +
#coord_sf(xlim = c(-85, -83.9), ylim = c(33, 33.5), expand = FALSE)+
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
# Specify the bounding box for the area you're interested in (adjust coordinates accordingly)
bounding_box <- c(left = -84.5, bottom = 33.5, right = -84, top = 34)
osm_data <- osmdata::opq(bbox = bounding_box) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
streets <- osm_data$osm_lines %>%
dplyr::filter(osm_data$osm_lines$highway %in% c('primary', 'secondary', 'tertiary', 'residential', 'unclassified'))
osm_data <- osmdata::opq(bbox = bounding_box) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
osm_data <- osmdata::opq(bbox = bounding_box) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
streets <- osm_data$osm_lines %>%
dplyr::filter(osm_data$osm_lines$highway %in% c('primary', 'secondary'))
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5), expand = FALSE)
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5), expand = FALSE)+
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5), expand = FALSE)+
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5), expand = FALSE)+
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
streets <- st_transform(streets, crs = 4326)
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5), expand = FALSE)+
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
# You can use other color scales
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
streets <- st_transform(streets, crs = 4326)
streets <- st_transform(streets, crs = 4326)
bird_red_census <- st_transform(bird_red_census, crs = 4326)
point_sf <- st_transform(point_sf, crs = 4326)
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5, inherit.aes = FALSE) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5)) +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot(data = st_sf(), aes()) +
geom_sf(data = streets, aes(), color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5)) +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, aes(), color = "red", size = 0.5) +
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
# Create an empty sf data frame with a dummy geometry column
empty_sf <- st_sfc(st_point())
ggplot(data = empty_sf, aes()) +
geom_sf(data = streets, aes(), color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5)) +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, aes(), color = "red", size = 0.5) +
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5, inherit.aes = FALSE) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 33.5)) +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5, inherit.aes = FALSE) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 34)) +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 34, expand = FALSE)
ggplot() +
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 34, expand = FALSE))
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 34))
# Specify the bounding box for the area you're interested in (adjust coordinates accordingly)
bounding_box <- c(left = -84.5, bottom = 33, right = -84, top = 35)
# Get OSM data for
osm_data <- osmdata::opq(bbox = bounding_box) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
#Set CRS system
# Example: Assuming the common CRS is EPSG:4326
streets <- st_transform(streets, crs = 4326)
osm_data <- osmdata::opq(bbox = bounding_box, timeout = 60) %>%
osmdata::add_osm_feature(key = 'highway') %>%
osmdata::osmdata_sf()
install.packages("ggmap")
library(ggmap)
# Get the OpenStreetMap data
osm_data <- opq(bbox) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
bbox <- c(left = -84.5, bottom = 33, right = -84, top = 35)
osm_data <- opq(bbox) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
ggplot() +
geom_sf(data = streets, color = "gray", size = 0.5, inherit.aes = FALSE) +
coord_sf(xlim = c(-84.5, -84), ylim = c(33, 34)) +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
# Create the plot
ggplot() +
#geom_sf(data = streets, color = "gray", size = 0.5, inherit.aes = FALSE) +
#coord_sf(xlim = c(-84.5, -84), ylim = c(33, 34)) +
geom_sf(data = bird_red_census, aes(fill = holc_grade), color = "white", size = 0.2) +
geom_sf(data = point_sf, color = "red", size = 0.5) +
labs(title = "Percent in poverty with Water Quality Station Locations") +
theme_minimal()
osm_data <- opq(bbox, timeout = 60) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
